package com.concordium.sdk;

import com.concordium.grpc.v2.BlockSignature;
import com.concordium.grpc.v2.ConsensusDetailedStatus;
import com.concordium.grpc.v2.PersistentRoundStatus;
import com.concordium.grpc.v2.QuorumMessage;
import com.concordium.grpc.v2.RawFinalizationEntry;
import com.concordium.grpc.v2.RawFinalizerRound;
import com.concordium.grpc.v2.RawQuorumCertificate;
import com.concordium.grpc.v2.RawTimeoutCertificate;
import com.concordium.grpc.v2.RoundStatus;
import com.concordium.grpc.v2.RoundTimeout;
import com.concordium.grpc.v2.TimeoutMessage;
import com.concordium.grpc.v2.*;
import com.concordium.sdk.crypto.BLSSignature;
import com.concordium.sdk.crypto.bls.BLSPublicKey;
import com.concordium.sdk.crypto.ed25519.ED25519PublicKey;
import com.concordium.sdk.crypto.ed25519.ED25519SecretKey;
import com.concordium.sdk.crypto.vrf.VRFPublicKey;
import com.concordium.sdk.responses.BakerId;
import com.concordium.sdk.responses.Epoch;
import com.concordium.sdk.responses.FinalizerIndex;
import com.concordium.sdk.responses.Round;
import com.concordium.sdk.responses.blockcertificates.QuorumSignature;
import com.concordium.sdk.responses.blockcertificates.SuccessorProof;
import com.concordium.sdk.responses.blockcertificates.TimeoutSignature;
import com.concordium.sdk.responses.consensusstatus.BakersAndFinalizers;
import com.concordium.sdk.responses.consensusstatus.BlockTableSummary;
import com.concordium.sdk.responses.consensusstatus.BranchBlocks;
import com.concordium.sdk.responses.consensusstatus.EpochBakers;
import com.concordium.sdk.responses.consensusstatus.FullBakerInfo;
import com.concordium.sdk.responses.consensusstatus.RoundExistingBlock;
import com.concordium.sdk.responses.consensusstatus.RoundExistingQC;
import com.concordium.sdk.responses.consensusstatus.TimeoutMessages;
import com.concordium.sdk.transactions.CCDAmount;
import com.concordium.sdk.transactions.Hash;
import com.concordium.sdk.transactions.Signature;
import com.concordium.sdk.types.AbsoluteBlockHeight;
import com.concordium.sdk.types.UInt64;
import com.google.protobuf.ByteString;
import io.grpc.ManagedChannel;
import io.grpc.inprocess.InProcessChannelBuilder;
import io.grpc.inprocess.InProcessServerBuilder;
import io.grpc.stub.StreamObserver;
import io.grpc.testing.GrpcCleanupRule;
import lombok.var;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;

import java.time.Duration;
import java.util.Optional;

import static com.concordium.sdk.ClientV2GetBlockCertificatesTest.bytesOfLength;
import static org.junit.Assert.assertEquals;
import static org.mockito.AdditionalAnswers.delegatesTo;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

public class ClientV2GetConsensusDetailedStatusTest {

    private static final byte[] BLOCK_HASH_1 = new byte[]{1, 1, 1};
    private static final byte[] BLOCK_HASH_2 = new byte[]{2, 2, 2};
    private static final byte[] BLOCK_HASH_3 = new byte[]{3, 3, 3};
    private static final byte[] BLOCK_HASH_4 = new byte[]{4, 4, 4};
    private static final byte[] QUORUM_SIG_1 = bytesOfLength(48, 1);
    private static final byte[] QUORUM_SIG_2 = bytesOfLength(48, 2);
    private static final byte[] TIMEOUT_SIG_1 = bytesOfLength(48, 3);
    private static final byte[] BLOCK_SIG_1 = new byte[]{1, 1, 1};
    private static final byte[] BLOCK_SIG_2 = new byte[]{2, 2, 2};
    private static final int FINALIZER_INDEX_1 = 1;
    private static final int FINALIZER_INDEX_2 = 1212;
    private static final long ROUND_1 = 1;
    private static final long ROUND_2 = 2214;
    private static final long EPOCH_1 = 1;
    private static final long EPOCH_2 = 3455;
    private static final long DURATION_1 = 12456;
    private static final boolean ROUND_ELIGIBLE_TO_BAKE = true;
    private static final int NON_FINALIZED_TX_COUNT = 2;
    private static final int TX_TABLE_PURGE_COUNTER = 3;
    private static final int DEAD_BLOCK_CACHE_SIZE = 4;
    private static final long BAKER_ID_1 = 1;
    private static final long BAKER_ID_2 = 14142;
    private static final long BAKER_ID_3 = 343423;
    private static final int BLOCK_HEIGHT_1 = 1;
    private static final int BLOCK_HEIGHT_2 = 2;
    private static final byte[] BAKER_AGGREGATION_KEY
            = ED25519PublicKey.from(ED25519SecretKey.createNew()).getBytes();
    private static final byte[] BAKER_ELECTION_VERIFY_KEY
            = ED25519PublicKey.from(ED25519SecretKey.createNew()).getBytes();
    private static final byte[] BAKER_SIGNATURE_VERIFY_KEY
            = ED25519PublicKey.from(ED25519SecretKey.createNew()).getBytes();
    private static final long BAKER_STAKE_1 = 10000;
    private static final long FINALIZER_STAKE_1 = 24444;

    private static final ConsensusDetailedStatus GRPC_CONSENSUS = ConsensusDetailedStatus.newBuilder()
            .setGenesisBlock(
                    BlockHash.newBuilder()
                            .setValue(
                                    ByteString.copyFrom(BLOCK_HASH_1)
                            )
            )
            .setPersistentRoundStatus(
                    PersistentRoundStatus.newBuilder()
                            .setLastSignedQuorumMessage(
                                    QuorumMessage.newBuilder()
                                            .setSignature(
                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(QUORUM_SIG_1)
                                                            )
                                            )
                                            .setBlock(
                                                    BlockHash.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                                            )
                                            )
                                            .setFinalizer(
                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                            .setValue(FINALIZER_INDEX_1)
                                            )
                                            .setRound(
                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                            .setValue(ROUND_1)
                                            )
                                            .setEpoch(
                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                            .setValue(EPOCH_1)
                                            )

                            )
                            .setLastSignedTimeoutMessage(
                                    TimeoutMessage.newBuilder()
                                            .setFinalizer(
                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                            .setValue(FINALIZER_INDEX_1)
                                            )
                                            .setRound(
                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                            .setValue(ROUND_1)
                                            )
                                            .setEpoch(
                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                            .setValue(EPOCH_1)
                                            )
                                            .setQuorumCertificate(
                                                    RawQuorumCertificate.newBuilder()
                                                            .setBlockHash(
                                                                    BlockHash.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                                                            )
                                                            )
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_1)
                                                            )
                                                            .setEpoch(
                                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                                            .setValue(EPOCH_1)
                                                            )
                                                            .setAggregateSignature(
                                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(QUORUM_SIG_1)
                                                                            )
                                                            )
                                                            .addSignatories(
                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                            .setValue(FINALIZER_INDEX_1)
                                                            )
                                            )
                                            .setSignature(
                                                    com.concordium.grpc.v2.TimeoutSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(TIMEOUT_SIG_1)
                                                            )
                                            )
                                            .setMessageSignature(
                                                    BlockSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_SIG_1)
                                                            )
                                            )
                            )
                            .setLastBakedRound(
                                    com.concordium.grpc.v2.Round.newBuilder()
                                            .setValue(ROUND_1)
                            )
                            .setLatestTimeout(
                                    RawTimeoutCertificate.newBuilder()
                                            .setRound(
                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                            .setValue(ROUND_1)
                                            )
                                            .setMinEpoch(
                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                            .setValue(EPOCH_1)
                                            )
                                            .addQcRoundsFirstEpoch(
                                                    RawFinalizerRound.newBuilder()
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_1)
                                                            )
                                                            .addFinalizers(
                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                            .setValue(FINALIZER_INDEX_1)
                                                            )
                                            )
                                            .addQcRoundsSecondEpoch(
                                                    RawFinalizerRound.newBuilder()
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_2)
                                                            )
                                                            .addFinalizers(
                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                            .setValue(FINALIZER_INDEX_2)
                                                            )
                                            )
                                            .setAggregateSignature(
                                                    com.concordium.grpc.v2.TimeoutSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(TIMEOUT_SIG_1)
                                                            )
                                            )
                            )
            )
            .setRoundStatus(
                    RoundStatus.newBuilder()
                            .setCurrentRound(
                                    com.concordium.grpc.v2.Round.newBuilder()
                                            .setValue(ROUND_1)
                            )
                            .setHighestCertifiedBlock(
                                    RawQuorumCertificate.newBuilder()
                                            .setBlockHash(
                                                    BlockHash.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                                            )
                                            )
                                            .setRound(
                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                            .setValue(ROUND_1)
                                            )
                                            .setEpoch(
                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                            .setValue(EPOCH_1)
                                            )
                                            .setAggregateSignature(
                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(QUORUM_SIG_1)
                                                            )
                                            )
                                            .addSignatories(
                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                            .setValue(FINALIZER_INDEX_1)
                                            )
                            )
                            .setPreviousRoundTimeout(
                                    RoundTimeout.newBuilder()
                                            .setTimeoutCertificate(
                                                    RawTimeoutCertificate.newBuilder()
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_1)
                                                            )
                                                            .setMinEpoch(
                                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                                            .setValue(EPOCH_1)
                                                            )
                                                            .addQcRoundsFirstEpoch(
                                                                    RawFinalizerRound.newBuilder()
                                                                            .setRound(
                                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                                            .setValue(ROUND_1)
                                                                            )
                                                                            .addFinalizers(
                                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                                            .setValue(FINALIZER_INDEX_1)
                                                                            )
                                                            )
                                                            .addQcRoundsSecondEpoch(
                                                                    RawFinalizerRound.newBuilder()
                                                                            .setRound(
                                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                                            .setValue(ROUND_2)
                                                                            )
                                                                            .addFinalizers(
                                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                                            .setValue(FINALIZER_INDEX_2)
                                                                            )
                                                            )
                                                            .setAggregateSignature(
                                                                    com.concordium.grpc.v2.TimeoutSignature.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(TIMEOUT_SIG_1)
                                                                            )
                                                            )
                                            )
                                            .setQuorumCertificate(
                                                    RawQuorumCertificate.newBuilder()
                                                            .setBlockHash(
                                                                    BlockHash.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                                                            )
                                                            )
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_1)
                                                            )
                                                            .setEpoch(
                                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                                            .setValue(EPOCH_1)
                                                            )
                                                            .setAggregateSignature(
                                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(QUORUM_SIG_1)
                                                                            )
                                                            )
                                                            .addSignatories(
                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                            .setValue(FINALIZER_INDEX_1)
                                                            )
                                            )
                            )
                            .setRoundEligibleToBake(ROUND_ELIGIBLE_TO_BAKE)
                            .setCurrentEpoch(
                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                            .setValue(EPOCH_1)
                            )
                            .setLastEpochFinalizationEntry(
                                    RawFinalizationEntry.newBuilder()
                                            .setFinalizedQc(
                                                    RawQuorumCertificate.newBuilder()
                                                            .setBlockHash(
                                                                    BlockHash.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                                                            )
                                                            )
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_1)
                                                            )
                                                            .setEpoch(
                                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                                            .setValue(EPOCH_1)
                                                            )
                                                            .setAggregateSignature(
                                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(QUORUM_SIG_1)
                                                                            )
                                                            )
                                                            .addSignatories(
                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                            .setValue(FINALIZER_INDEX_1)
                                                            )
                                            )
                                            .setSuccessorQc(
                                                    RawQuorumCertificate.newBuilder()
                                                            .setBlockHash(
                                                                    BlockHash.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BLOCK_HASH_2)
                                                                            )
                                                            )
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_2)
                                                            )
                                                            .setEpoch(
                                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                                            .setValue(EPOCH_2)
                                                            )
                                                            .setAggregateSignature(
                                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(QUORUM_SIG_2)
                                                                            )
                                                            )
                                                            .addSignatories(
                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                            .setValue(FINALIZER_INDEX_2)
                                                            )
                                            )
                                            .setSuccessorProof(
                                                    com.concordium.grpc.v2.SuccessorProof.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_HASH_2)
                                                            )
                                            )
                            )
                            .setCurrentTimeout(
                                    com.concordium.grpc.v2.Duration.newBuilder()
                                            .setValue(DURATION_1)
                            )
            )
            .setNonFinalizedTransactionCount(NON_FINALIZED_TX_COUNT)
            .setTransactionTablePurgeCounter(TX_TABLE_PURGE_COUNTER)
            .setBlockTable(
                    com.concordium.grpc.v2.BlockTableSummary.newBuilder()
                            .setDeadBlockCacheSize(DEAD_BLOCK_CACHE_SIZE)
                            .addLiveBlocks(
                                    BlockHash.newBuilder()
                                            .setValue(
                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                            )
                            )
            )
            .addBranches(
                    com.concordium.grpc.v2.BranchBlocks.newBuilder()
                            .addBlocksAtBranchHeight(
                                    BlockHash.newBuilder()
                                            .setValue(
                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                            )
                            )
            )
            .addRoundExistingBlocks(
                    com.concordium.grpc.v2.RoundExistingBlock.newBuilder()
                            .setRound(
                                    com.concordium.grpc.v2.Round.newBuilder()
                                            .setValue(ROUND_1)
                            )
                            .setBaker(
                                    com.concordium.grpc.v2.BakerId.newBuilder()
                                            .setValue(BAKER_ID_1)
                            )
                            .setBlock(
                                    BlockHash.newBuilder()
                                            .setValue(
                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                            )
                            )
            )
            .addRoundExistingQcs(
                    com.concordium.grpc.v2.RoundExistingQC.newBuilder()
                            .setRound(
                                    com.concordium.grpc.v2.Round.newBuilder()
                                            .setValue(ROUND_2)
                            )
                            .setEpoch(
                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                            .setValue(EPOCH_2)
                            )
            )
            .setGenesisBlockHeight(
                    com.concordium.grpc.v2.AbsoluteBlockHeight.newBuilder()
                            .setValue(BLOCK_HEIGHT_2)
            )
            .setLastFinalizedBlock(
                    BlockHash.newBuilder()
                            .setValue(
                                    ByteString.copyFrom(BLOCK_HASH_3)
                            )
            )
            .setLastFinalizedBlockHeight(
                    BlockHeight.newBuilder()
                            .setValue(BLOCK_HEIGHT_1)
            )
            .setLatestFinalizationEntry(
                    RawFinalizationEntry.newBuilder()
                            .setFinalizedQc(
                                    RawQuorumCertificate.newBuilder()
                                            .setBlockHash(
                                                    BlockHash.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                                            )
                                            )
                                            .setRound(
                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                            .setValue(ROUND_1)
                                            )
                                            .setEpoch(
                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                            .setValue(EPOCH_1)
                                            )
                                            .setAggregateSignature(
                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(QUORUM_SIG_1)
                                                            )
                                            )
                                            .addSignatories(
                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                            .setValue(FINALIZER_INDEX_1)
                                            )
                            )
                            .setSuccessorQc(
                                    RawQuorumCertificate.newBuilder()
                                            .setBlockHash(
                                                    BlockHash.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_HASH_2)
                                                            )
                                            )
                                            .setRound(
                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                            .setValue(ROUND_2)
                                            )
                                            .setEpoch(
                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                            .setValue(EPOCH_2)
                                            )
                                            .setAggregateSignature(
                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(QUORUM_SIG_2)
                                                            )
                                            )
                                            .addSignatories(
                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                            .setValue(FINALIZER_INDEX_2)
                                            )
                            )
                            .setSuccessorProof(
                                    com.concordium.grpc.v2.SuccessorProof.newBuilder()
                                            .setValue(
                                                    ByteString.copyFrom(BLOCK_HASH_2)
                                            )
                            )
            )
            .setEpochBakers(
                    com.concordium.grpc.v2.EpochBakers.newBuilder()
                            .setPreviousEpochBakers(
                                    com.concordium.grpc.v2.BakersAndFinalizers.newBuilder()
                                            .addBakers(
                                                    com.concordium.grpc.v2.FullBakerInfo.newBuilder()
                                                            .setBakerIdentity(
                                                                    com.concordium.grpc.v2.BakerId.newBuilder()
                                                                            .setValue(BAKER_ID_1)
                                                            )
                                                            .setElectionVerifyKey(
                                                                    BakerElectionVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_ELECTION_VERIFY_KEY)
                                                                            )
                                                            )
                                                            .setSignatureVerifyKey(
                                                                    BakerSignatureVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_SIGNATURE_VERIFY_KEY)
                                                                            )
                                                            )
                                                            .setAggregationVerifyKey(
                                                                    BakerAggregationVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_AGGREGATION_KEY)
                                                                            )
                                                            )
                                                            .setStake(
                                                                    Amount.newBuilder()
                                                                            .setValue(BAKER_STAKE_1)
                                                            )
                                            )
                                            .addFinalizers(
                                                    com.concordium.grpc.v2.BakerId.newBuilder()
                                                            .setValue(BAKER_ID_1)
                                            )
                                            .setBakerTotalStake(
                                                    Amount.newBuilder()
                                                            .setValue(BAKER_STAKE_1)
                                            )
                                            .setFinalizerTotalStake(
                                                    Amount.newBuilder()
                                                            .setValue(FINALIZER_STAKE_1)
                                            )
                                            .setFinalizationCommitteeHash(
                                                    FinalizationCommitteeHash.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                                            )
                                            )
                            )
                            .setCurrentEpochBakers(
                                    com.concordium.grpc.v2.BakersAndFinalizers.newBuilder()
                                            .addBakers(
                                                    com.concordium.grpc.v2.FullBakerInfo.newBuilder()
                                                            .setBakerIdentity(
                                                                    com.concordium.grpc.v2.BakerId.newBuilder()
                                                                            .setValue(BAKER_ID_2)
                                                            )
                                                            .setElectionVerifyKey(
                                                                    BakerElectionVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_ELECTION_VERIFY_KEY)
                                                                            )
                                                            )
                                                            .setSignatureVerifyKey(
                                                                    BakerSignatureVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_SIGNATURE_VERIFY_KEY)
                                                                            )
                                                            )
                                                            .setAggregationVerifyKey(
                                                                    BakerAggregationVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_AGGREGATION_KEY)
                                                                            )
                                                            )
                                                            .setStake(
                                                                    Amount.newBuilder()
                                                                            .setValue(BAKER_STAKE_1)
                                                            )
                                            )
                                            .addFinalizers(
                                                    com.concordium.grpc.v2.BakerId.newBuilder()
                                                            .setValue(BAKER_ID_2)
                                            )
                                            .setBakerTotalStake(
                                                    Amount.newBuilder()
                                                            .setValue(BAKER_STAKE_1)
                                            )
                                            .setFinalizerTotalStake(
                                                    Amount.newBuilder()
                                                            .setValue(FINALIZER_STAKE_1)
                                            )
                                            .setFinalizationCommitteeHash(
                                                    FinalizationCommitteeHash.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_HASH_2)
                                                            )
                                            )
                            )
                            .setNextEpochBakers(
                                    com.concordium.grpc.v2.BakersAndFinalizers.newBuilder()
                                            .addBakers(
                                                    com.concordium.grpc.v2.FullBakerInfo.newBuilder()
                                                            .setBakerIdentity(
                                                                    com.concordium.grpc.v2.BakerId.newBuilder()
                                                                            .setValue(BAKER_ID_3)
                                                            )
                                                            .setElectionVerifyKey(
                                                                    BakerElectionVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_ELECTION_VERIFY_KEY)
                                                                            )
                                                            )
                                                            .setSignatureVerifyKey(
                                                                    BakerSignatureVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_SIGNATURE_VERIFY_KEY)
                                                                            )
                                                            )
                                                            .setAggregationVerifyKey(
                                                                    BakerAggregationVerifyKey.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BAKER_AGGREGATION_KEY)
                                                                            )
                                                            )
                                                            .setStake(
                                                                    Amount.newBuilder()
                                                                            .setValue(BAKER_STAKE_1)
                                                            )
                                            )
                                            .addFinalizers(
                                                    com.concordium.grpc.v2.BakerId.newBuilder()
                                                            .setValue(BAKER_ID_3)
                                            )
                                            .setBakerTotalStake(
                                                    Amount.newBuilder()
                                                            .setValue(BAKER_STAKE_1)
                                            )
                                            .setFinalizerTotalStake(
                                                    Amount.newBuilder()
                                                            .setValue(FINALIZER_STAKE_1)
                                            )
                                            .setFinalizationCommitteeHash(
                                                    FinalizationCommitteeHash.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_HASH_3)
                                                            )
                                            )
                            )
                            .setNextPayday(
                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                            .setValue(EPOCH_1)
                            )
            )
            .setTimeoutMessages(
                    com.concordium.grpc.v2.TimeoutMessages.newBuilder()
                            .setFirstEpoch(
                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                            .setValue(EPOCH_1)
                            )
                            .addFirstEpochTimeouts(
                                    TimeoutMessage.newBuilder()
                                            .setFinalizer(
                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                            .setValue(FINALIZER_INDEX_1)
                                            )
                                            .setRound(
                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                            .setValue(ROUND_1)
                                            )
                                            .setEpoch(
                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                            .setValue(EPOCH_1)
                                            )
                                            .setQuorumCertificate(
                                                    RawQuorumCertificate.newBuilder()
                                                            .setBlockHash(
                                                                    BlockHash.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BLOCK_HASH_1)
                                                                            )
                                                            )
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_1)
                                                            )
                                                            .setEpoch(
                                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                                            .setValue(EPOCH_1)
                                                            )
                                                            .setAggregateSignature(
                                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(QUORUM_SIG_1)
                                                                            )
                                                            )
                                                            .addSignatories(
                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                            .setValue(FINALIZER_INDEX_1)
                                                            )
                                            )
                                            .setSignature(
                                                    com.concordium.grpc.v2.TimeoutSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(TIMEOUT_SIG_1)
                                                            )
                                            )
                                            .setMessageSignature(
                                                    BlockSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_SIG_1)
                                                            )
                                            )
                            )
                            .addSecondEpochTimeouts(
                                    TimeoutMessage.newBuilder()
                                            .setFinalizer(
                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                            .setValue(FINALIZER_INDEX_2)
                                            )
                                            .setRound(
                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                            .setValue(ROUND_2)
                                            )
                                            .setEpoch(
                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                            .setValue(EPOCH_2)
                                            )
                                            .setQuorumCertificate(
                                                    RawQuorumCertificate.newBuilder()
                                                            .setBlockHash(
                                                                    BlockHash.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(BLOCK_HASH_2)
                                                                            )
                                                            )
                                                            .setRound(
                                                                    com.concordium.grpc.v2.Round.newBuilder()
                                                                            .setValue(ROUND_2)
                                                            )
                                                            .setEpoch(
                                                                    com.concordium.grpc.v2.Epoch.newBuilder()
                                                                            .setValue(EPOCH_2)
                                                            )
                                                            .setAggregateSignature(
                                                                    com.concordium.grpc.v2.QuorumSignature.newBuilder()
                                                                            .setValue(
                                                                                    ByteString.copyFrom(QUORUM_SIG_2)
                                                                            )
                                                            )
                                                            .addSignatories(
                                                                    com.concordium.grpc.v2.FinalizerIndex.newBuilder()
                                                                            .setValue(FINALIZER_INDEX_2)
                                                            )
                                            )
                                            .setSignature(
                                                    com.concordium.grpc.v2.TimeoutSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(TIMEOUT_SIG_1)
                                                            )
                                            )
                                            .setMessageSignature(
                                                    BlockSignature.newBuilder()
                                                            .setValue(
                                                                    ByteString.copyFrom(BLOCK_SIG_2)
                                                            )
                                            )
                            )
            )
            .setTerminalBlock(
                    BlockHash.newBuilder()
                            .setValue(
                                    ByteString.copyFrom(BLOCK_HASH_4)
                            )
            )
            .build();

    private static final com.concordium.sdk.responses.consensusstatus.ConsensusDetailedStatus CONSENSUS_INFO_RES_EXPECTED = com.concordium.sdk.responses.consensusstatus.ConsensusDetailedStatus.builder()
            .genesisBlock(Hash.from(BLOCK_HASH_1))
            .persistentRoundStatus(
                    com.concordium.sdk.responses.consensusstatus.PersistentRoundStatus.builder()
                            .lastSignedQuorumMessage(
                                    com.concordium.sdk.responses.consensusstatus.QuorumMessage.builder()
                                            .signature(
                                                    QuorumSignature.builder()
                                                            .value(
                                                                    BLSSignature.from(QUORUM_SIG_1)
                                                            )
                                                            .build()
                                            )
                                            .block(
                                                    Hash.from(BLOCK_HASH_1)
                                            )
                                            .finalizer(
                                                    new FinalizerIndex(FINALIZER_INDEX_1)
                                            )
                                            .round(
                                                    new Round(
                                                            UInt64.from(
                                                                    ROUND_1
                                                            ))
                                            )
                                            .epoch(
                                                    new Epoch(
                                                            UInt64.from(
                                                                    EPOCH_1
                                                            )
                                                    )
                                            )
                                            .build()
                            )
                            .lastSignedTimeoutMessage(
                                    com.concordium.sdk.responses.consensusstatus.TimeoutMessage.builder()
                                            .finalizer(
                                                    new FinalizerIndex(FINALIZER_INDEX_1)
                                            )
                                            .round(
                                                    new Round(
                                                            UInt64.from(
                                                                    ROUND_1
                                                            )
                                                    )
                                            )
                                            .epoch(
                                                    new Epoch(
                                                            UInt64.from(
                                                                    EPOCH_1
                                                            )
                                                    )
                                            )
                                            .quorumCertificate(
                                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                                            .blockHash(
                                                                    Hash.from(BLOCK_HASH_1)
                                                            )
                                                            .round(
                                                                    new Round(
                                                                            UInt64.from(
                                                                                    ROUND_1
                                                                            )
                                                                    )
                                                            )
                                                            .epoch(new Epoch(
                                                                    UInt64.from(
                                                                            EPOCH_1
                                                                    )
                                                            ))
                                                            .aggregatedSignature(
                                                                    QuorumSignature.builder()
                                                                            .value(
                                                                                    BLSSignature.from(
                                                                                            QUORUM_SIG_1
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .signatory(
                                                                    new FinalizerIndex(
                                                                            FINALIZER_INDEX_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .signature(
                                                    TimeoutSignature.builder()
                                                            .value(
                                                                    BLSSignature.from(
                                                                            TIMEOUT_SIG_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .messageSignature(
                                                    com.concordium.sdk.responses.consensusstatus.BlockSignature.builder()
                                                            .value(
                                                                    Signature.from(
                                                                            BLOCK_SIG_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .build()
                            )
                            .lastBakedRound(
                                    Round.from(
                                            ROUND_1
                                    )
                            )
                            .latestTimeout(
                                    com.concordium.sdk.responses.consensusstatus.RawTimeoutCertificate.builder()
                                            .round(
                                                    Round.from(
                                                            ROUND_1
                                                    )
                                            )
                                            .minEpoch(
                                                    Epoch.from(
                                                            EPOCH_1
                                                    )
                                            )
                                            .qcRoundFirstEpoch(
                                                    com.concordium.sdk.responses.consensusstatus.RawFinalizerRound.builder()
                                                            .round(
                                                                    Round.from(
                                                                            ROUND_1
                                                                    )
                                                            )
                                                            .finalizer(
                                                                    new FinalizerIndex(
                                                                            FINALIZER_INDEX_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .qcRoundSecondEpoch(
                                                    com.concordium.sdk.responses.consensusstatus.RawFinalizerRound.builder()
                                                            .round(
                                                                    Round.from(
                                                                            ROUND_2
                                                                    )
                                                            )
                                                            .finalizer(
                                                                    new FinalizerIndex(
                                                                            FINALIZER_INDEX_2
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .aggregateSignature(
                                                    TimeoutSignature.builder()
                                                            .value(
                                                                    BLSSignature.from(
                                                                            TIMEOUT_SIG_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .build()
                            )
                            .build()
            )
            .roundStatus(
                    com.concordium.sdk.responses.consensusstatus.RoundStatus.builder()
                            .currentRound(
                                    Round.from(
                                            ROUND_1
                                    )
                            )
                            .highestCertifiedBlock(
                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                            .blockHash(
                                                    Hash.from(BLOCK_HASH_1)
                                            )
                                            .round(
                                                    new Round(
                                                            UInt64.from(
                                                                    ROUND_1
                                                            )
                                                    )
                                            )
                                            .epoch(new Epoch(
                                                    UInt64.from(
                                                            EPOCH_1
                                                    )
                                            ))
                                            .aggregatedSignature(
                                                    QuorumSignature.builder()
                                                            .value(
                                                                    BLSSignature.from(
                                                                            QUORUM_SIG_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .signatory(
                                                    new FinalizerIndex(
                                                            FINALIZER_INDEX_1
                                                    )
                                            )
                                            .build()
                            )
                            .previousRoundTimeout(
                                    com.concordium.sdk.responses.consensusstatus.RoundTimeout.builder()
                                            .timeoutCertificate(
                                                    com.concordium.sdk.responses.consensusstatus.RawTimeoutCertificate.builder()
                                                            .round(
                                                                    Round.from(
                                                                            ROUND_1
                                                                    )
                                                            )
                                                            .minEpoch(
                                                                    Epoch.from(
                                                                            EPOCH_1
                                                                    )
                                                            )
                                                            .qcRoundFirstEpoch(
                                                                    com.concordium.sdk.responses.consensusstatus.RawFinalizerRound.builder()
                                                                            .round(
                                                                                    Round.from(
                                                                                            ROUND_1
                                                                                    )
                                                                            )
                                                                            .finalizer(
                                                                                    new FinalizerIndex(
                                                                                            FINALIZER_INDEX_1
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .qcRoundSecondEpoch(
                                                                    com.concordium.sdk.responses.consensusstatus.RawFinalizerRound.builder()
                                                                            .round(
                                                                                    Round.from(
                                                                                            ROUND_2
                                                                                    )
                                                                            )
                                                                            .finalizer(
                                                                                    new FinalizerIndex(
                                                                                            FINALIZER_INDEX_2
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .aggregateSignature(
                                                                    TimeoutSignature.builder()
                                                                            .value(
                                                                                    BLSSignature.from(
                                                                                            TIMEOUT_SIG_1
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .build()
                                            )
                                            .quorumCertificate(
                                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                                            .blockHash(
                                                                    Hash.from(BLOCK_HASH_1)
                                                            )
                                                            .round(
                                                                    new Round(
                                                                            UInt64.from(
                                                                                    ROUND_1
                                                                            )
                                                                    )
                                                            )
                                                            .epoch(new Epoch(
                                                                    UInt64.from(
                                                                            EPOCH_1
                                                                    )
                                                            ))
                                                            .aggregatedSignature(
                                                                    QuorumSignature.builder()
                                                                            .value(
                                                                                    BLSSignature.from(
                                                                                            QUORUM_SIG_1
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .signatory(
                                                                    new FinalizerIndex(
                                                                            FINALIZER_INDEX_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .build()
                            )
                            .roundEligibleToBake(ROUND_ELIGIBLE_TO_BAKE)
                            .currentEpoch(
                                    Epoch.from(
                                            UInt64.from(
                                                    EPOCH_1
                                            )
                                    )
                            )
                            .lastEpochFinalizationEntry(
                                    com.concordium.sdk.responses.consensusstatus.RawFinalizationEntry.builder()
                                            .finalizedQc(
                                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                                            .blockHash(
                                                                    Hash.from(BLOCK_HASH_1)
                                                            )
                                                            .round(
                                                                    new Round(
                                                                            UInt64.from(
                                                                                    ROUND_1
                                                                            )
                                                                    )
                                                            )
                                                            .epoch(new Epoch(
                                                                    UInt64.from(
                                                                            EPOCH_1
                                                                    )
                                                            ))
                                                            .aggregatedSignature(
                                                                    QuorumSignature.builder()
                                                                            .value(
                                                                                    BLSSignature.from(
                                                                                            QUORUM_SIG_1
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .signatory(
                                                                    new FinalizerIndex(
                                                                            FINALIZER_INDEX_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .successorQc(
                                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                                            .blockHash(
                                                                    Hash.from(BLOCK_HASH_2)
                                                            )
                                                            .round(
                                                                    new Round(
                                                                            UInt64.from(
                                                                                    ROUND_2
                                                                            )
                                                                    )
                                                            )
                                                            .epoch(new Epoch(
                                                                    UInt64.from(
                                                                            EPOCH_2
                                                                    )
                                                            ))
                                                            .aggregatedSignature(
                                                                    QuorumSignature.builder()
                                                                            .value(
                                                                                    BLSSignature.from(
                                                                                            QUORUM_SIG_2
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .signatory(
                                                                    new FinalizerIndex(
                                                                            FINALIZER_INDEX_2
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .successorProof(
                                                    SuccessorProof.builder()
                                                            .value(
                                                                    Hash.from(
                                                                            BLOCK_HASH_2
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .build()
                            )
                            .currentTimeout(
                                    Duration.ofMillis(
                                            DURATION_1
                                    )
                            )
                            .build()
            )
            .nonFinalizedTransactionCount(
                    UInt64.from(
                            NON_FINALIZED_TX_COUNT
                    )
            )
            .transactionTablePurgeCounter(TX_TABLE_PURGE_COUNTER)
            .blockTable(
                    BlockTableSummary.builder()
                            .deadBlockCacheSize(
                                    UInt64.from(
                                            DEAD_BLOCK_CACHE_SIZE
                                    )
                            )
                            .liveBlock(
                                    Hash.from(
                                            BLOCK_HASH_1
                                    )
                            )
                            .build()
            )
            .branch(
                    BranchBlocks.builder()
                            .blockAtBranchHeight(
                                    Hash.from(
                                            BLOCK_HASH_1
                                    )
                            )
                            .build()
            )
            .roundExistingBlock(
                    RoundExistingBlock.builder()
                            .round(
                                    Round.from(
                                            ROUND_1
                                    )
                            )
                            .baker(
                                    BakerId.from(
                                            BAKER_ID_1
                                    )
                            )
                            .block(
                                    Hash.from(
                                            BLOCK_HASH_1
                                    )
                            )
                            .build()
            )
            .roundExistingQC(
                    RoundExistingQC.builder()
                            .round(
                                    Round.from(
                                            ROUND_2
                                    )
                            )
                            .epoch(
                                    Epoch.from(
                                            EPOCH_2
                                    )
                            )
                            .build()
            )
            .genesisBlockHeight(
                    AbsoluteBlockHeight.from(
                            BLOCK_HEIGHT_2
                    )
            )
            .lastFinalizedBlock(
                    Hash.from(
                            BLOCK_HASH_3
                    )
            )
            .lastFinalizedBlockHeight(
                    BLOCK_HEIGHT_1
            )
            .latestFinalizationEntry(
                    com.concordium.sdk.responses.consensusstatus.RawFinalizationEntry.builder()
                            .finalizedQc(
                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                            .blockHash(
                                                    Hash.from(BLOCK_HASH_1)
                                            )
                                            .round(
                                                    new Round(
                                                            UInt64.from(
                                                                    ROUND_1
                                                            )
                                                    )
                                            )
                                            .epoch(new Epoch(
                                                    UInt64.from(
                                                            EPOCH_1
                                                    )
                                            ))
                                            .aggregatedSignature(
                                                    QuorumSignature.builder()
                                                            .value(
                                                                    BLSSignature.from(
                                                                            QUORUM_SIG_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .signatory(
                                                    new FinalizerIndex(
                                                            FINALIZER_INDEX_1
                                                    )
                                            )
                                            .build()
                            )
                            .successorQc(
                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                            .blockHash(
                                                    Hash.from(BLOCK_HASH_2)
                                            )
                                            .round(
                                                    new Round(
                                                            UInt64.from(
                                                                    ROUND_2
                                                            )
                                                    )
                                            )
                                            .epoch(new Epoch(
                                                    UInt64.from(
                                                            EPOCH_2
                                                    )
                                            ))
                                            .aggregatedSignature(
                                                    QuorumSignature.builder()
                                                            .value(
                                                                    BLSSignature.from(
                                                                            QUORUM_SIG_2
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .signatory(
                                                    new FinalizerIndex(
                                                            FINALIZER_INDEX_2
                                                    )
                                            )
                                            .build()
                            )
                            .successorProof(
                                    SuccessorProof.builder()
                                            .value(
                                                    Hash.from(
                                                            BLOCK_HASH_2
                                                    )
                                            )
                                            .build()
                            )
                            .build()
            )
            .epochBakers(
                    EpochBakers.builder()
                            .previousEpochBakers(
                                    BakersAndFinalizers.builder()
                                            .baker(
                                                    FullBakerInfo.builder()
                                                            .bakerIdentity(
                                                                    BakerId.from(
                                                                            BAKER_ID_1
                                                                    )
                                                            )
                                                            .electionVerifyKey(
                                                                    VRFPublicKey.from(
                                                                            BAKER_ELECTION_VERIFY_KEY
                                                                    )
                                                            )
                                                            .signatureVerifyKey(
                                                                    ED25519PublicKey.from(
                                                                            BAKER_SIGNATURE_VERIFY_KEY
                                                                    )
                                                            )
                                                            .aggregationVerifyKey(
                                                                    BLSPublicKey.from(
                                                                            BAKER_AGGREGATION_KEY
                                                                    )
                                                            )
                                                            .stake(
                                                                    CCDAmount.fromMicro(
                                                                            BAKER_STAKE_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .finalizer(
                                                    BakerId.from(
                                                            BAKER_ID_1
                                                    )
                                            )
                                            .bakerTotalStake(
                                                    CCDAmount.fromMicro(
                                                            BAKER_STAKE_1
                                                    )
                                            )
                                            .finalizerTotalStake(
                                                    CCDAmount.fromMicro(
                                                            FINALIZER_STAKE_1
                                                    )
                                            )
                                            .finalizationCommitteeHash(
                                                    Hash.from(
                                                            BLOCK_HASH_1
                                                    )
                                            )
                                            .build()
                            )
                            .currentEpochBakers(
                                    BakersAndFinalizers.builder()
                                            .baker(
                                                    FullBakerInfo.builder()
                                                            .bakerIdentity(
                                                                    BakerId.from(
                                                                            BAKER_ID_2
                                                                    )
                                                            )
                                                            .electionVerifyKey(
                                                                    VRFPublicKey.from(
                                                                            BAKER_ELECTION_VERIFY_KEY
                                                                    )
                                                            )
                                                            .signatureVerifyKey(
                                                                    ED25519PublicKey.from(
                                                                            BAKER_SIGNATURE_VERIFY_KEY
                                                                    )
                                                            )
                                                            .aggregationVerifyKey(
                                                                    BLSPublicKey.from(
                                                                            BAKER_AGGREGATION_KEY
                                                                    )
                                                            )
                                                            .stake(
                                                                    CCDAmount.fromMicro(
                                                                            BAKER_STAKE_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .finalizer(
                                                    BakerId.from(
                                                            BAKER_ID_2
                                                    )
                                            )
                                            .bakerTotalStake(
                                                    CCDAmount.fromMicro(
                                                            BAKER_STAKE_1
                                                    )
                                            )
                                            .finalizationCommitteeHash(
                                                    Hash.from(
                                                            BLOCK_HASH_2
                                                    )
                                            )
                                            .finalizerTotalStake(
                                                    CCDAmount.fromMicro(
                                                            FINALIZER_STAKE_1
                                                    )
                                            )
                                            .build()
                            )
                            .nextEpochBakers(
                                    BakersAndFinalizers.builder()
                                            .baker(
                                                    FullBakerInfo.builder()
                                                            .bakerIdentity(
                                                                    BakerId.from(
                                                                            BAKER_ID_3
                                                                    )
                                                            )
                                                            .electionVerifyKey(
                                                                    VRFPublicKey.from(
                                                                            BAKER_ELECTION_VERIFY_KEY
                                                                    )
                                                            )
                                                            .signatureVerifyKey(
                                                                    ED25519PublicKey.from(
                                                                            BAKER_SIGNATURE_VERIFY_KEY
                                                                    )
                                                            )
                                                            .aggregationVerifyKey(
                                                                    BLSPublicKey.from(
                                                                            BAKER_AGGREGATION_KEY
                                                                    )
                                                            )
                                                            .stake(
                                                                    CCDAmount.fromMicro(
                                                                            BAKER_STAKE_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .finalizer(
                                                    BakerId.from(
                                                            BAKER_ID_3
                                                    )
                                            )
                                            .bakerTotalStake(
                                                    CCDAmount.fromMicro(
                                                            BAKER_STAKE_1
                                                    )
                                            )
                                            .finalizerTotalStake(
                                                    CCDAmount.fromMicro(
                                                            FINALIZER_STAKE_1
                                                    )
                                            )
                                            .finalizationCommitteeHash(
                                                    Hash.from(
                                                            BLOCK_HASH_3
                                                    )
                                            )
                                            .build()
                            )
                            .nextPayday(
                                    Epoch.from(
                                            EPOCH_1
                                    )
                            )
                            .build()
            )
            .timeoutMessages(
                    TimeoutMessages.builder()
                            .firstEpoch(
                                    Epoch.from(
                                            EPOCH_1
                                    )
                            )
                            .firstEpochTimeout(
                                    com.concordium.sdk.responses.consensusstatus.TimeoutMessage.builder()
                                            .finalizer(
                                                    new FinalizerIndex(FINALIZER_INDEX_1)
                                            )
                                            .round(
                                                    new Round(
                                                            UInt64.from(
                                                                    ROUND_1
                                                            )
                                                    )
                                            )
                                            .epoch(
                                                    new Epoch(
                                                            UInt64.from(
                                                                    EPOCH_1
                                                            )
                                                    )
                                            )
                                            .quorumCertificate(
                                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                                            .blockHash(
                                                                    Hash.from(BLOCK_HASH_1)
                                                            )
                                                            .round(
                                                                    new Round(
                                                                            UInt64.from(
                                                                                    ROUND_1
                                                                            )
                                                                    )
                                                            )
                                                            .epoch(new Epoch(
                                                                    UInt64.from(
                                                                            EPOCH_1
                                                                    )
                                                            ))
                                                            .aggregatedSignature(
                                                                    QuorumSignature.builder()
                                                                            .value(
                                                                                    BLSSignature.from(
                                                                                            QUORUM_SIG_1
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .signatory(
                                                                    new FinalizerIndex(
                                                                            FINALIZER_INDEX_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .signature(
                                                    TimeoutSignature.builder()
                                                            .value(
                                                                    BLSSignature.from(
                                                                            TIMEOUT_SIG_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .messageSignature(
                                                    com.concordium.sdk.responses.consensusstatus.BlockSignature.builder()
                                                            .value(
                                                                    Signature.from(
                                                                            BLOCK_SIG_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .build()
                            )
                            .secondEpochTimeout(
                                    com.concordium.sdk.responses.consensusstatus.TimeoutMessage.builder()
                                            .finalizer(
                                                    new FinalizerIndex(FINALIZER_INDEX_2)
                                            )
                                            .round(
                                                    new Round(
                                                            UInt64.from(
                                                                    ROUND_2
                                                            )
                                                    )
                                            )
                                            .epoch(
                                                    new Epoch(
                                                            UInt64.from(
                                                                    EPOCH_2
                                                            )
                                                    )
                                            )
                                            .quorumCertificate(
                                                    com.concordium.sdk.responses.consensusstatus.RawQuorumCertificate.builder()
                                                            .blockHash(
                                                                    Hash.from(BLOCK_HASH_2)
                                                            )
                                                            .round(
                                                                    new Round(
                                                                            UInt64.from(
                                                                                    ROUND_2
                                                                            )
                                                                    )
                                                            )
                                                            .epoch(new Epoch(
                                                                    UInt64.from(
                                                                            EPOCH_2
                                                                    )
                                                            ))
                                                            .aggregatedSignature(
                                                                    QuorumSignature.builder()
                                                                            .value(
                                                                                    BLSSignature.from(
                                                                                            QUORUM_SIG_2
                                                                                    )
                                                                            )
                                                                            .build()
                                                            )
                                                            .signatory(
                                                                    new FinalizerIndex(
                                                                            FINALIZER_INDEX_2
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .signature(
                                                    TimeoutSignature.builder()
                                                            .value(
                                                                    BLSSignature.from(
                                                                            TIMEOUT_SIG_1
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .messageSignature(
                                                    com.concordium.sdk.responses.consensusstatus.BlockSignature.builder()
                                                            .value(
                                                                    Signature.from(
                                                                            BLOCK_SIG_2
                                                                    )
                                                            )
                                                            .build()
                                            )
                                            .build()
                            )
                            .build()
            )
            .terminalBlock(
                    Hash.from(
                            BLOCK_HASH_4
                    )
            )
            .build();

    private static final QueriesGrpc.QueriesImplBase serviceImpl = mock(QueriesGrpc.QueriesImplBase.class, delegatesTo(
            new QueriesGrpc.QueriesImplBase() {
                @Override
                public void getConsensusDetailedStatus(
                        ConsensusDetailedStatusQuery request,
                        StreamObserver<ConsensusDetailedStatus> responseObserver) {
                    responseObserver.onNext(GRPC_CONSENSUS);
                    responseObserver.onCompleted();
                }
            }
    ));
    @Rule
    public final GrpcCleanupRule grpcCleanup = new GrpcCleanupRule();

    private ClientV2 client;


    @Before
    public void setUp() throws Exception {
        String serverName = InProcessServerBuilder.generateName();
        grpcCleanup.register(InProcessServerBuilder
                .forName(serverName).directExecutor().addService(serviceImpl).build().start());
        ManagedChannel channel = grpcCleanup.register(
                InProcessChannelBuilder.forName(serverName).directExecutor().build());
        client = new ClientV2(10000, channel, Optional.empty());
    }


    @Test
    public void getConsensusStatus() {
        var res = client.getConsensusDetailedStatus(
                com.concordium.sdk.requests.ConsensusDetailedStatusQuery.builder().build()
        );

        verify(serviceImpl).getConsensusDetailedStatus(any(ConsensusDetailedStatusQuery.class), any(StreamObserver.class));
        assertEquals(CONSENSUS_INFO_RES_EXPECTED, res);
    }
}
